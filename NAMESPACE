useDynLib("flowCore",biexponential_transform, inPolygon)

import("methods")
importClassesFrom("graph","graphNEL")
importFrom("utils", "getFromNamespace", "assignInNamespace")
importFrom("MASS", "cov.rob")
importFrom("geneplotter", "smoothScatter","densCols")
importFrom("graphics", "plot")


importFrom("Biobase", "exprs", "exprs<-", "description", "description<-","phenoData","phenoData<-","multiassign")
importClassesFrom("Biobase", "eSet")

exportClasses("flowFrame", "flowSet", "transformation",
              "filter", "rectangleGate", "polygonGate", "polytopeGate","ellipsoidGate",
              "filterResult",  "norm2Filter", "filterTree")

exportMethods("description", "description<-","phenoData","phenoData<-","%in%","%subset%","summary",
              "exprs", "exprs<-", "show",
              "transform","split","Subset","filter","filterDetails","filterResultType","plot", "coerce","spillover","compensate")

export("%in%") #We define a generic 
export("print.filterSummary")
export("read.FCS","read.flowSet",
	"linearTransform","quadraticTransform",
       "lnTransform", "logTransform",
       "biexponentialTransform","logicleTransform",
       "rectangleGate","polygonGate","polytopeGate","ellipsoideGate","norm2Filter")
