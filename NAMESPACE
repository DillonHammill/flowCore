useDynLib("flowCore",biexponential_transform, inPolygon)

import("methods")
importClassesFrom("graph","graphNEL")
importFrom("utils", "getFromNamespace", "assignInNamespace")
importFrom("MASS", "cov.rob")
importFrom("geneplotter", "smoothScatter","densCols")
importFrom("graphics", "plot")


importFrom("Biobase", "exprs", "exprs<-", "description", "description<-","phenoData","phenoData<-","multiassign",
	"sampleNames","sampleNames<-","featureNames","featureNames<-")
importClassesFrom("Biobase", "eSet")

exportClasses("flowFrame", "flowSet",
              "filter", "rectangleGate", "polygonGate", "polytopeGate","ellipsoidGate","sampleFilter","multiFilter",
              "filterResult", "randomFilterResult", "logicalFilterResult","multipleFilterResult","setOperationFilter", 
 			  "norm2Filter", "kmeansFilter", "filterTree","transform","transformMap","transformList","transformFilter")

exportMethods("initialize","description","phenoData","phenoData<-",
              "featureNames","names","colnames","keyword",
              "%in%","%subset%","%&%","%on%","summary","identifier",
              "exprs", "exprs<-", "parameters", "show","nrow","ncol",
              "transform","split","Subset","filter","filterDetails",
              "filterDetails<-","plot", "coerce","spillover",
              "compensate","fsApply","sampleNames", "summary","each_row","each_col")

export("%in%") #We define a generic. Is this necessary? I'm thinking not...

export("read.FCS","read.flowSet",
	"linearTransform","quadraticTransform", "lnTransform", "logTransform","scaleTransform",
       "biexponentialTransform","logicleTransform","truncateTransform",
       "rectangleGate","polygonGate","polytopeGate","ellipsoidGate",
       "norm2Filter","kmeansFilter","print.filterSummary")
       
