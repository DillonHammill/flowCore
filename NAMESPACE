useDynLib("flowCore",biexponential_transform, inPolygon)

import("methods")
importClassesFrom("graph","graphNEL")
importFrom("utils", "getFromNamespace", "assignInNamespace")
importFrom("MASS", "cov.rob")
importFrom("geneplotter", "smoothScatter","densCols")
importFrom("graphics", "plot")
importFrom("prada","fitNorm2")

importFrom("Biobase", "exprs", "exprs<-", "description", "description<-","phenoData","phenoData<-","multiassign")
importClassesFrom("Biobase", "eSet")


exportClasses("flowFrame", "flowSet", "transformation",
              "quadraticTransformation", "lnTransformation", "logTransformation","biexponentialTransformation",
              "filter", "rectangleGate", "polygonGate",
              "filterResult", "norm2Filter", "filterTree")

exportMethods("description", "description<-","phenoData","phenoData<-","%in%",
              "exprs", "exprs<-", "show",
              "transform", "applyFilter", "transform", "plot", "coerce")
export("%in%") #We define a generic 
export("read.FCS","read.flowSet","linearTransform","logicleTransform",
	"rectGate")
