useDynLib("flowCore",biexponential_transform, inPolygon)

importFrom(utils,
           "assignInNamespace",
           "getFromNamespace",
           "head",
           "tail")

importFrom(MASS,
           "cov.rob")

importFrom(Biobase,
           "description",
           "description<-",
           "exprs",
           "exprs<-",
           "featureNames",
           "featureNames<-",
           "multiassign",
           "pData",
           "pData<-",
           "phenoData",
           "phenoData<-",
           "read.AnnotatedDataFrame",
           "sampleNames",
           "sampleNames<-",
           "varLabels",
           "varLabels<-",
           "varMetadata",
           "varMetadata<-")

#importFrom("graphics", "plot")

importMethodsFrom(Biobase,
                  "dim",
                  "length",
                  "initialize",
                  "show")

importClassesFrom(Biobase,
                  "AnnotatedDataFrame",
                  "eSet",
                  "phenoData")

exportClasses("complementFilter",
              "concreteFilter",
              "curv1Filter",
              "curv2Filter",
              "ellipsoidGate",
              "expressionFilter",
              "filter",
              "filterReference",
              "filterResult",
              "filterSet",
              "flowFrame",
              "flowSet",
              "intersectFilter",
              "kmeansFilter",
              "logicalFilterResult",
              "manyFilterResult",
              "multipleFilterResult",
              "norm2Filter",
              "parameterFilter",
              "polygonGate",
              "polytopeGate",
              "quadGate",
              "randomFilterResult",
              "rectangleGate",         
              "sampleFilter",
              "setOperationFilter",
              "subsetFilter",
              "timeFilter",
              "transform",
              "transformMap",
              "transformList",
              "transformFilter",
              "unionFilter")

exportMethods("coerce",
              "colnames",
              "colnames<-",
              "compensate",
              "description",
              "description<-",
              "dim",
              "each_row",
              "each_col",
              "exprs",
              "exprs<-",
              "featureNames",
              "filter",
              "filterDetails",
              "filterDetails<-",
              "filterReference",
              "fsApply",
              "head",
              "identifier",
              "identifier<-",
              "initialize",
              "keyword",
              "keyword<-",
              "length",
              "names",
              "ncol",
              "nrow",
              "parameters",
              "parameters<-",
              "pData",
              "pData<-",
              "phenoData",
              "phenoData<-",
              "plot",
              "range",
              "rbind2",
              "sampleNames",
              "sampleNames<-",
              "show",
              "sort",
              "spillover",
              "split",
              "Subset",
              "summary",
              "tail",
              "transform",       
              "varLabels",
              "varLabels<-",
              "varMetadata",
              "varMetadata<-",
              "%in%",
              "%on%",
              "%subset%",
              "[",
              "[[",
              "[[<-")

S3method("$", "flowFrame")

export("arcsinhTransform",
       "as.data.frame.manyFilterResult",
       "biexponentialTransform",
       "char2ExpressionFilter",
       "curv1Filter",
       "curv2Filter",
       "ellipsoidGate",
       "expressionFilter",
       "filterReference",
       "filterSet",
       "flowFrame",
       "flowSet",
       "kmeansFilter",
       "linearTransform",
       "lnTransform",
       "logTransform",
       "logicleTransform",
       "manyFilterResult",
       "norm2Filter",
       "polygonGate",
       "polytopeGate",
       "print.filterSummary",
       "quadGate",
       "quadraticTransform",
       "read.FCS",
       "read.FCSheader",
       "read.flowSet",
       "rectangleGate",
       "sampleFilter",
       "scaleTransform",
       "splitScaleTransform",
       "timeFilter",
       "truncateTransform",
       "transformList",
       "%&%",
       "%in%")
